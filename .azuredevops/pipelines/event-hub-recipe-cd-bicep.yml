# The following variables should be set in the pipeline:
# AZURE_SERVICE_CONNECTION

trigger: none
pr: none
resources:
  pipelines:
    - pipeline: evhCIPipeline
      source: 'Private Event Hub Recipe CI'
      trigger: 
        branches:
          include:
          - main

name: 'Private Event Hub Recipe CD - Bicep'

pool: 
  vmImage: 'ubuntu-latest'

stages:
  - stage: Deploy
    displayName: Deploy

    jobs:
      - job: DeployBicep
        displayName: Deploy Bicep Files
        variables:
        - template: variables/private-event-hub-recipe-bicep.yml
        steps:
          - template: ./templates/bicep-deploy.yml
            parameters:
              bicepPath: ./src/az-func-event-hub/deploy/bicep/main.bicep
              bicepParameters: 'location=$(location) dnsZoneResourceGroupName=$(operationsResourceGroupName) newOrExistingDnsZones=$(newOrExistingDnsZones) virtualNetworkAddressPrefix=$(vnetAddressPrefix) virtualNetworkAppServiceIntegrationSubnetAddressPrefix=$(vnetSubnetAppServiceIntegrationAddressPrefix) virtualNetworkPrivateEndpointSubnetAddressPrefix=$(vnetSubnetPrivateEndpointAddressPrefix)'
              serviceConnection: $(AZURE_SERVICE_CONNECTION)
          - template: ./templates/vnet-peering.yml
            parameters:
              azureSubscription: $(AZURE_SERVICE_CONNECTION)
              sourceResourceGroupName: $(resourceGroupName)
              targetResourceGroupName: $(operationsResourceGroupName)
              targetVirtualNetworkName: $(operationsVirtualNetworkName)
              infraSourceType: bicep
      - job: DeployAzureFunction
        dependsOn: DeployBicep
        displayName: Deploy Azure Function App
        variables:
        - template: variables/private-event-hub-recipe-bicep.yml
        steps:
          - template: ./templates/dotnet-build.yml
            parameters: 
              sourceCodePath: '**/src/common/app_code/eventhub-trigger/*.csproj'
              testCodePath: ''
              buildConfiguration: 'Release'
              codeCoverageThreshold: '$(codeCoverageThreshold)'
          - task: DownloadPipelineArtifact@2
            displayName: "Download Function Artifact"
            inputs:
              buildType: "current"
              artifact: "dotnetArtifact"
              targetPath: "$(Pipeline.Workspace)/dotnetArtifact"
          - task: DownloadPipelineArtifact@2
            displayName: "Download Bicep Artifact"
            inputs:
              buildType: "current"
              artifact: "bicep"
              targetPath: "$(Pipeline.Workspace)/bicep"
          - task: Bash@3
            displayName: "Pull Azure Function App Name From Outputs"
            inputs:
              targetType: 'inline'
              workingDirectory: "$(Pipeline.Workspace)/bicep"
              script: |
                functionName=$(jq -r '.properties.outputs.functionAppName.value' outputs.json)
                echo "Azure Function name: $functionName"
                echo "##vso[task.setvariable variable=azureFunctionName;]$functionName"
          - task: AzureFunctionApp@1
            displayName: Deploy Azure Function App
            inputs:
              appType: 'functionApp'
              appName: '$(azureFunctionName)'
              resourceGroupName: '$(resourceGroupName)'
              azureSubscription: $(AZURE_SERVICE_CONNECTION)
              package: '$(Pipeline.Workspace)/dotnetArtifact/eventhub-trigger.zip'
              deploymentMethod: 'runFromPackage'